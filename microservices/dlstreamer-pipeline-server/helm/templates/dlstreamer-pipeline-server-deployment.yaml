apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dlstreamer-pipeline-server
  name: dlstreamer-pipeline-server-deployment
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dlstreamer-pipeline-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dlstreamer-pipeline-server
    spec:
      securityContext:
        supplementalGroups: [109,110,992]
      {{- if and $.Values.DOCKER_USERNAME $.Values.DOCKER_PASSWORD }}
      imagePullSecrets:
      - name: registryauth
      {{- end }}

      initContainers:
      - name: fetch-pipeline-resources
        image: bitnami/git:latest
        command:
          - /bin/bash
          - -c
          - |
            git clone --depth 1 https://github.com/open-edge-platform/edge-ai-libraries /repo -b release-1.2.0
            mkdir -p /resources/models/geti /resources/videos
            cp -r /repo/microservices/dlstreamer-pipeline-server/resources/models/geti/ /resources/models/
            curl -L https://github.com/open-edge-platform/edge-ai-libraries/raw/release-1.2.0/microservices/dlstreamer-pipeline-server/resources/videos/warehouse.avi -o /resources/videos/warehouse.avi
        volumeMounts:
          - name: pipeline-resources
            mountPath: /resources
          - name: repo
            mountPath: /repo
        env:
        - name: http_proxy
          value: {{ $.Values.env.http_proxy }}
        - name: https_proxy
          value: {{ $.Values.env.https_proxy }}
        - name: no_proxy
          value: {{ $.Values.env.no_proxy }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL

      containers:
      - name: dlstreamer-pipeline-server
        image: {{ $.Values.DOCKER_REGISTRY }}{{ $.Values.images.dlstreamer_pipeline_server }}
        imagePullPolicy: {{ $.Values.imagePullPolicy }}
        {{- if $.Values.privileged_access_required }}
        securityContext:
          privileged: true # Required for direct access to /dev
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: true
          capabilities:
            drop:
              - ALL
        {{- else }}
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsUser: 1999
          capabilities:
            drop:
              - ALL
        {{- end }}
        terminationMessagePath: /tmp/termination-log
        {{- if $.Values.gpu.enabled }}
        resources:
          limits:
            {{ $.Values.gpu.type }}: {{ $.Values.gpu.count }}
        {{- end }}
        env:
        - name: REST_SERVER_PORT
          value: "{{ $.Values.env.REST_SERVER_PORT }}"
        - name: ENABLE_RTSP
          value: "{{ $.Values.env.ENABLE_RTSP }}"
        - name: GST_DEBUG
          value: '{{ $.Values.env.GST_DEBUG }}'
        - name: HTTPS
          value: "{{ $.Values.env.HTTPS }}"
        - name: RTSP_PORT
          value: "{{ $.Values.env.RTSP_PORT }}"
        - name: http_proxy
          value: {{ $.Values.env.http_proxy }}
        - name: https_proxy
          value: {{ $.Values.env.https_proxy }}
        - name: no_proxy
          value: {{ $.Values.env.no_proxy }}
        - name: LOG_LEVEL
          value: "{{ $.Values.env.LOG_LEVEL }}"
        volumeMounts:
        - name: dlstreamer-pipeline-server-input
          mountPath: /home/pipeline-server/config.json
          subPath: config.json
        - mountPath: /var/cache/pipeline_root
          name: vol-pipeline-root-tmpfs0
        - name: dev
          mountPath: /dev
          readOnly: true # Reduce risk while preserving access to GPU/NPU devices
        - name: dev-shm
          mountPath: /dev/shm
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: run-udev
          mountPath: /run/udev
        - name: pipeline-resources
          mountPath: /home/pipeline-server/resources
        - name: repo
          mountPath: /repo

      volumes:
      - name: dlstreamer-pipeline-server-input
        configMap:
          name: dlstreamer-pipeline-server-config-input
      - name: vol-pipeline-root-tmpfs0
        emptyDir: {}
      - name: dev
        hostPath:
          path: /dev
      - name: dev-shm
        hostPath:
          path: /dev/shm
      - name: tmp
        hostPath:
          path: /tmp
      - name: var-tmp
        hostPath:
          path: /var/tmp
      - name: run-udev
        hostPath:
          path: /run/udev
      - name: pipeline-resources
        emptyDir: {}
      - name: repo
        emptyDir: {}
