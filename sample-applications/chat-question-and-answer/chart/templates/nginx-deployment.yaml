apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nginx.fullname" . }}-config
data:
  nginx.conf: |+
    pid /tmp/nginx.pid;

    events{}

    http {
      server {
        listen  8101;
        listen [::]:8101;

        client_max_body_size 500M;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300; 

        location / {
            proxy_pass http://{{ index .Values "chatqnaui" "name" }}:{{ index .Values "chatqnaui" "service" "port" }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /v1/chatqna {
            proxy_pass http://{{ .Values.Chatqna.name }}:{{ .Values.Chatqna.service.port }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /v1/dataprep {
            proxy_pass http://{{ .Values.dataprepPgvector.name }}:{{ index .Values "dataprepPgvector" "service" "port" }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx.fullname" . }}
  labels:
    {{- include "chatqna-helm-chart.labels" . | nindent 4 }}
    app: {{ include "nginx.fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ include "nginx.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "nginx.fullname" . }}
    spec:
      containers:
      - image: nginxinc/nginx-unprivileged:1.29.1
        imagePullPolicy: {{ .Values.Chatqna.image.pullPolicy }}
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config-volume
          subPath: nginx.conf
      securityContext:
        allowPrivilegeEscalation: false
      volumes:
      - configMap:
          name: {{ include "nginx.fullname" . }}-config
        name: nginx-config-volume
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nginx.fullname" . }}
  {{- if .Values.nginxService.annotations }}
  annotations: {{ toYaml .Values.nginxService.annotations | nindent 4 }}
  {{- end }}  
spec:
  ports:
  - port: 8101
    protocol: TCP
    targetPort: 8101
    nodePort: {{ .Values.global.UI_NODEPORT }}
  selector:
    app: {{ include "nginx.fullname" . }}
  type: NodePort
