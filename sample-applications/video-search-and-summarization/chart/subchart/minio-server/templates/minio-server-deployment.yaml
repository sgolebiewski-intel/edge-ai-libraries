apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "minioserver.fullname" . }}
  labels:
    app: {{ include "minioserver.name" . }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ include "minioserver.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.containerApiPortName }}
              containerPort: 9000
            - name: {{ .Values.containerConsolePortName }}
              containerPort: 9001
          volumeMounts:
            - mountPath: /data
              name: minio-data
              subPath: miniodata
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.global.env.MINIO_ROOT_USER }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.global.env.MINIO_ROOT_PASSWORD }}
            - name: HTTP_PROXY
              value: {{ .Values.global.proxy.http_proxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.proxy.https_proxy }}
            - name: no_proxy
              value: "{{ .Values.global.proxy.no_proxy }},localhost,127.0.0.1,audioanalyzer,vlm-inference-microservice,videosummarybackend,videoingestion,minio-server,postgresql,video-summary-nginx,rabbitmq,multimodal-embedding-ms,vdms-dataprep,vdms-vectordb,videosearch,.svc.cluster.local"
            - name: NO_PROXY
              value: "{{ .Values.global.proxy.no_proxy }},localhost,127.0.0.1,audioanalyzer,vlm-inference-microservice,videosummarybackend,videoingestion,minio-server,postgresql,video-summary-nginx,rabbitmq,multimodal-embedding-ms,vdms-dataprep,vdms-vectordb,videosearch,.svc.cluster.local"
          command: ["minio","server", "/data", "--address", ":9000", "--console-address", ":9001"]
      volumes:
        - name: minio-data
          {{- if .Values.global.pvcName }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.pvcName }}
          {{- else if .Values.global.volumeHostPath }}
          hostPath:
            path: {{ .Values.global.volumeHostPath }}
            type: DirectoryOrCreate
          {{- else }}
          emptyDir: {}
          {{- end }}
