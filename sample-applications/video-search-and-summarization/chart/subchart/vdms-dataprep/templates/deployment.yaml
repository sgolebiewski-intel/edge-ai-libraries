apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vdms-dataprep.fullname" . }}
  labels:
    {{- include "vdms-dataprep.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "vdms-dataprep.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vdms-dataprep.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          env:
            - name: APP_HOST
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/app']
          envFrom:
            - configMapRef:
                name: {{ include "vdms-dataprep.fullname" . }}-config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ ternary .Values.image.tag .Values.global.commonTag (empty .Values.global.commonTag) | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.containerPortName }}
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: volume-data
              mountPath: /root/.cache
              subPath: dataprep-cache
            - name: volume-data
              mountPath: /tmp/dataprep
              subPath: dataprep
      volumes:
        - name: tmp
          emptyDir: {}
        - name:  volume-data
          {{- if .Values.global.pvcName }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.pvcName }}
          {{- else if .Values.global.volumeHostPath }}
          hostPath:
            path: {{ .Values.global.volumeHostPath }}
            type: DirectoryOrCreate
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
