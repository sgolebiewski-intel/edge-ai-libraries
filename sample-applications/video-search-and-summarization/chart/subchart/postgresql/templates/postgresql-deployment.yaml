apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql.fullname" . }}
  labels:
    app: {{ include "postgresql.name" . }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ include "postgresql.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "postgresql.name" . }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "postgresql.name" . }}
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.postgresql.containerPort }}
              name: {{ .Values.postgresql.containerPortName }}
              protocol: TCP
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data/
              subPath: pgdata
          env:
            - name: HTTP_PROXY
              value: {{ .Values.global.proxy.http_proxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.proxy.https_proxy }}
            - name: NO_PROXY
              value: "{{ .Values.global.proxy.no_proxy }},localhost,127.0.0.1,audioanalyzer,vlm-inference-microservice,videosummarybackend,videoingestion,minio-server,postgresql,video-summary-nginx,rabbitmq,multimodal-embedding-ms,vdms-dataprep,vdms-vectordb,videosearch,.svc.cluster.local"
            - name: POSTGRES_USER
              value: {{ .Values.global.env.POSTGRES_USER | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.global.env.POSTGRES_PASSWORD | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.global.env.POSTGRES_DB | quote }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          resources: {{ toYaml .Values.postgresql.resources | nindent 12 }}
      volumes:
        - name: postgresql-data
          {{- if .Values.global.pvcName }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.pvcName }}
          {{- else if .Values.global.volumeHostPath }}
          hostPath:
            path: {{ .Values.global.volumeHostPath }}
            type: DirectoryOrCreate
          {{- else }}
          emptyDir: {}
          {{- end }}
      nodeSelector: {{ toYaml .Values.postgresql.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml .Values.postgresql.tolerations | nindent 8 }}
      affinity: {{ toYaml .Values.postgresql.affinity | nindent 8 }}
