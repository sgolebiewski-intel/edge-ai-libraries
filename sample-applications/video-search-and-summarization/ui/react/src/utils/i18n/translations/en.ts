// Copyright (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
export const enTranslations = {
  VideoSummary: 'Video Summary',
  VSSBrand: 'Video Summary & Search',
  VSearchBrand: 'Video Search',
  VSummBrand: 'Video Summary',
  videoTags: 'Video tags (separated by commas)',

  SearchVideo: 'Search Videos',
  SearchRerun: 'Re-run search',
  videoSearchStart: 'Video Search Query',
  SearchingForPlaceholder: 'Red bus or white plane...',
  search: 'Search',
  Queries: 'Search Queries',
  queryDeleteLabel: 'Delete Query',
  queryDeleteSuccess: 'Query successfully deleted',
  searchNothingSelected: 'Create a search query',
  CreatingEmbeddings: 'Creating Embeddings',
  EmbeddingsCreated: 'Embeddings Created',
  selectASummaryFromSidebar: 'Select a Summary from the sidebar',
  noSummariesAvailable: 'Please create a summary',
  tagsLabel: 'Filter Tags',
  tagsHelperText: 'Select tags to filter the results',
  AddingSearches: '({{count}}) search in progress',
  topK: 'Search Output Count',
  searchInProgress: 'searching',
  customVideoTags: 'Custom Tags',
  videoTagsHelperText: 'Add custom tags to the video, separated by commas',
  availableVideoTags: 'Available Video Tags',

  uploadingVideo: 'Uploading Video',
  CreatingEmbedding: 'Creating Embedding',
  TriggeringPipeline: 'Triggering Pipeline',
  allDone: 'All Done',
  AddVideoToEmbedding: 'Create Video Embedding',
  SummarizeVideo: 'Summarize a Video',
  CreateVideoEmbedding: 'Create Video Embedding',
  VideoUpload: 'Upload Video',
  SelectVideo: 'Select a Video',
  changeVideo: 'Change Video',
  summaryTitle: 'Summary title',
  videoNameLabel: 'Video Label',
  ChunkDurationLabel: 'Duration for a chunk (secs)',
  FramePerChunkLabel: 'Sample frame per chunk',
  RelevanceScore: 'Relevance Score',
  Summaries: 'Summaries',
  SyncState: 'Sync status',
  selectASummary: 'Select a Summary',
  naTag: 'N/A',
  readyTag: 'In Queue',
  completeTag: 'Completed',
  progressTag: 'In Progress',
  summaryLabel: 'Video Summary',
  chunkingLabel: 'Video Chunking',
  chunkingSummaryLabel: 'Video Chunks Summary',
  sampleRate: 'Sample Rate: {{frames}} frames every {{interval}} seconds',
  aiModel: 'Model: {{model}}',
  runningOn: 'Running on: {{device}}',
  frameOverlap: 'Frame Overlap: {{overlap}}',
  multiFrame: 'Multi Frames: {{multiFrame}}',
  noticeMessage: 'Development in progress',
  deleteSummaryLabel: 'Delete Summary',
  thisWillDelete: 'This will delete ',
  deleteSummary: 'Deleting Summary',
  summaryDeleteSuccess: 'Summary successfully deleted',
  summaryDeleteFailed: 'Unable to delete summary',
  cancel: 'Cancel',
  delete: 'Delete',
  objectDetectionConfig: 'Object Detection using {{model}} running on {{device}}',
  vlmConfig: 'Captioning using {{model}} running on {{device}}',
  llmConfig: 'Summarizing using {{model}} running on {{device}}',
  endOfVideo: 'End',
  uploadingVideoState: 'Uploading Video',
  fetchingState: 'Fetch Pipeline State',
  showCaption: 'Show Frame Caption',
  showSummary: 'Show Chunk Summary',
  ChunkPrefix: 'Chunk',
  multiFrameWarning: 'Setting sample frames to {{frames}} might require longer time to process',
  showSummaries: 'See Summaries',
  chunkSummaryHeading: 'Summaries for chunk {{chunkId}}',
  SummaryForframes: 'Summaries for Frames [{{start}}:{{end}}]',
  SummaryInProgress: '{{count}} summaries are using frames from this chunk',
  FramesOverlap: 'Frames Overlap',
  MultiFrame: 'Frames batch size for summary creation',
  AdvancedSettings: 'Advanced Settings',
  frameOverlapWarning:
    'Frames Overlap + Sample Frames per Chunk = {{frames}} should be less than or equal to maximum Frames batch size  {{maxFrames}}.',
  success: 'success',
  error: 'error',
  warning: 'warning',
  info: 'info',

  FrameSummaries: 'Frame Summaries',

  ResetDefault: 'Reset to default',
  editPrompt: 'Edit prompt',
  promptHeading: 'Prompt',
  promptInputLabel: 'Prompt',
  UnusedVars: 'Unused variables: {{vars}}',
  promptPlaceholder: 'Add text for prompt',

  ChunkingPipeline: 'Pipeline: {{pipeline}}',

  FramePrompt: 'Frames Captioning Prompt',
  FramePromptInfo: 'Frames Captioning Prompt Information',
  FramePromptDescription:
    'Multi-frame Captioning prompt: Used to generate the indiviual caption(summary) for multi-frame batches using VLM (Vision Language Model).',
  FramePromptEditing: 'Editing Frames Captioning Prompt',

  SummaryPrompt: 'Final Summary Prompt',
  SummaryPromptInfo: 'Final Summary Prompt info',
  SummaryPromptDescription:
    'Final Summary Prompt: Used to generate the final summary of the individual multi-batch summaries using VLM model or LLM model (depending on application setup).',
  SummaryPromptEditing: 'Editing Final Summary Prompt',

  SummaryReducePrompt: 'Summary Reduce Prompt',
  SummaryReducePromptInfo: 'Summary prompt info',
  SummaryReducePromptDescription:
    'Summaries Reduce Prompt: Used to reduce the size of input for the final summary generation. This is used only in case the total length of input for final summary is greater than the model input size. In this case the multi-frame summaries are batched together in smaller batches and sent using this prompt to reduce the length, and then the resultant list of summaries is sent for final summary creation.',
  SummaryReducePromptEditing: 'Editing Summary Reduce Prompt',

  SummarySinglePrompt: 'Single Reduce Prompt',
  SummarySinglePromptInfo: 'Single Reduce Prompt info',
  SummarySinglePromptDescription:
    'Single Reduce Prompt: Used to reduce the size of a single caption. This is used only in case the size of even a single input is greater than the model input size. Size of each input is reduced such that at least 2 summaries can be batched together in map-reduce chain.',
  SummarySinglePromptEditing: 'Editing Single Reduce Prompt',

  OnlyMp4: 'Only mp4 videos are accepted',
  HelpText:
    'Mp4 videos need to be streamble to be processed. ffmpeg can be used to make mp4 streamable using following command',

  IngestionSettings: 'Ingestion Settings',
  AudioSettings: 'Audio Settings',
  PromptSettings: 'Prompt Settings',
  UseAudio: 'Use Audio Transcription',
  AudioModels: 'Audio Models',

  drawerTitle: 'Drawer Title',
  confirm: 'Confirm',
  headingMsg: 'Are you sure?',
  dataSource: 'Data Source',
  emptyMessage: 'Message is empty',
  submit: 'Submit',
  Submit: 'Apply',
  askQuestion: 'Ask a question',
  whoYouAre: 'Tell me who you are?',
  username: 'Username',
  startAskingQuestions: 'Start by asking a question.',
  uploadDocument: 'Please upload a file or, a link before asking a question.',
  files: 'Files',
  links: 'Links',
  startConversation: 'Start a new conversation by asking a question.',
  updateConversionTitleSuccessful: 'The conversation title has been updated successfully',
  updateConversionTitleFailed: 'The conversation title updation failed',
  conversationDeletionSuccessful: 'The conversation has been deleted successfully',
  conversationDeletionFailed: 'The conversation deletion failed',
  unexpectedError: 'Unexpected error occurred',
  fileNotFound: 'File not found',
  linkNotFound: 'Link not found',
  serverError: 'Server error occured',
  errorWithUpperCase: 'Error',
  deletedSuccessfully: 'deleted successfully',
  unknownError: 'An unknown error occurred',
  videoUploadError: 'An error occurred during video upload',
  invalidLink: 'Invalid link',
  showNoticeHiddenButton: 'Show Notice',
  showNotificationWhileStreaming: 'Please wait, streaming your current query response...',
};
