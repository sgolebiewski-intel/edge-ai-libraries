global:
  huggingface:
    # Set this during installation
    apiToken:
  proxy:
    no_proxy:
    http_proxy:
    https_proxy:
  UI_NODEPORT:
  POSTGRES_USER:
  POSTGRES_PASSWORD:
  MINIO_ROOT_USER:
  MINIO_ROOT_PASSWORD:
  LLM_MODEL:
  EMBEDDING_MODEL_NAME:
  RERANKER_MODEL:
  OTLP_ENDPOINT:
  OTLP_ENDPOINT_TRACE:
  #Set either one of the below embedding model sever to true by defauly OVMS is enabled
  teiEmbeddingService:
    enabled: false
  ovmsEmbeddingService:
    enabled: true
  #Enable the below service if OVMS embedding needs to be deployed in gpu
  ovmsEmbeddinggpuService:
    enabled: false
  gpu:
    enabled: false
    key:  #update as per the cluster node label key for GPU assigned by the device plugin
    device: "GPU" #If the system has an integrated GPU, its id is always 0 (GPU.0). The GPU is an alias for GPU.0. If a system has multiple GPUs (for example, an integrated and a discrete Intel GPU) It is done by specifying GPU.1,GPU.0
  minio_pvc:
    size: 20Gi
  reranker_pvc:
    size: 20Gi
  ovms_pvc:
    size: 40Gi # 20Gi does not work
  ovms_embed_pvc:
    size: 20Gi
  keeppvc: false # true  to persist models across multiple deployments

Chatqna:
  name: chatqna-backend
  image:
    repository: intel/chatqna
    tag: "1.2.3"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8100
    targetPort: 8080
  env:
    ENDPOINT_URL: http://ovms
    INDEX_NAME: intel-rag
    FETCH_K: 10
    PORT_DB: 5432/langchain
    OTEL_METRICS_EXPORTER: otlp
    OTEL_TRACES_EXPORTER: otlp
    OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: http/protobuf
    OTEL_SERVICE_NAME: chatqna
    OTEL_SERVICE_ENV: chatqna
    OTEL_SERVICE_VERSION: "1.0.0"
    REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
    PG_CONNECTION_STRING: postgresql+psycopg://
    SEED: 40

dataprepPgvector:
  name: document-ingestion
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000

tgiService:
  name: text-generation-service
  enabled: false
  service:
    port: 8080
vllmService:
  name: vllm-service
  enabled: false
  service:
    port: 8080
ovmsService:
  name: ovmsService
  enabled: true
  service:
    port: 8300
reranker:
  service:
    port: 8090
chatqnaui:
  name: chatqna-ui
  nameOverride: "ui"
  service:
    port: 8101

nginxService:
  annotations: {}
