replicaCount: 1

image:
    cpu:
        repository: intel/multimodal-embedding-serving
    gpu:
        repository: intel/multimodal-embedding-serving
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2.1"

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext:
  capabilities:
      drop:
          - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: false
  runAsUser: 0
  seccompProfile:
    type: RuntimeDefault

containerPort: 8000 # Port on which container application listens internally
containerPortName: mm-embed-port  # Optional name to refer containerPort
service:
  type: ClusterIP
  port: 8000   # Port on which service listens for incoming connection, if exposed externally
  portName: http  # Service port name. Useful when service exposes multiple ports.

resources: {}

livenessProbe:
  httpGet:
    path: /health
    port: mm-embed-port
  initialDelaySeconds: 10
  periodSeconds: 20
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: mm-embed-port
  initialDelaySeconds: 5
  periodSeconds: 20
  failureThreshold: 3

# Wait for startup till max ~ 30Mins 
startupProbe:
  httpGet:
    path: /health
    port: mm-embed-port
  initialDelaySeconds: 10
  periodSeconds: 20
  failureThreshold: 90

# Starting up MME service with TextEmebedding Model can take a while, so we set a longer startup probe
# Wait for startup till max ~ 45Mins
startupProbeWithTextEmbeddingModel:
  httpGet:
    port: mm-embed-port
    path: /health
  initialDelaySeconds: 10
  periodSeconds: 30
  failureThreshold: 90

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
imageEmbeddingModel: ""
textEmbeddingModel: ""
useOnlyTextEmbeddings: false
defaultStartOffsetSec: 0
defaultClipDuration: 10
defaultNumFrames: 64
embeddingUseOV: false
embeddingDevice: 'CPU'

# GPU-specific configurations
gpu:
    enabled: false  # Set to true for GPU deployment
    key: "dgpu"
    value: "arc770"
    videoGroupID: 44  # Replace with actual group ID
    renderGroupID: 109  # Replace with actual group ID
    group_add: []  # Add additional groups if required

global:
    # Set this value to hostPath where we want to mount a volume (Used in single node cluster or standalone sub-chart installation).
    volumeHostPath: "/mnt/embeddingms"

    # pvcName is the name of common PVC used by multiple microservices for persisting models, cache and other files.
    pvcName: ""
    
    # Nodes on which pods using the PV will be scheduled
    storageNodeAffinity: []

    # Common release tags to be used for several dependencies
    commonTag: ''

    proxy:
    # setup proxy settings
        no_proxy: ''
        http_proxy: ''
        https_proxy: ''

# Node affinity to schedule pods on specific nodes only
nodeAffinity: {}

